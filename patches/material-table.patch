diff --git a/dist/components/m-table-body-row.js b/dist/components/m-table-body-row.js
index 6a772549..91c12858 100644
--- a/dist/components/m-table-body-row.js
+++ b/dist/components/m-table-body-row.js
@@ -420,7 +420,7 @@ var MTableBodyRow = /*#__PURE__*/function (_React$Component) {
           cellEditable = _this$props.cellEditable,
           onCellEditStarted = _this$props.onCellEditStarted,
           onCellEditFinished = _this$props.onCellEditFinished,
-          rowProps = (0, _objectWithoutProperties2["default"])(_this$props, ["icons", "data", "columns", "components", "detailPanel", "getFieldValue", "isTreeData", "onRowClick", "onRowSelected", "onTreeExpandChanged", "onToggleDetailPanel", "onEditingCanceled", "onEditingApproved", "options", "hasAnyEditingRow", "treeDataMaxLevel", "localization", "actions", "errorState", "cellEditable", "onCellEditStarted", "onCellEditFinished"]);
+          rowProps = (0, _objectWithoutProperties2["default"])(_this$props, ["icons", "data", "columns", "components", "detailPanel", "getFieldValue", "isTreeData", "onRowClick", "onRowSelected", "onTreeExpandChanged", "onToggleDetailPanel", "onEditingCanceled", "onEditingApproved", "options", "hasAnyEditingRow", "treeDataMaxLevel", "localization", "actions", "errorState", "cellEditable", "onCellEditStarted", "onCellEditFinished", "scrollWidth"]);
       return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(_TableRow["default"], (0, _extends2["default"])({
         selected: hasAnyEditingRow
       }, rowProps, {
diff --git a/dist/components/m-table-cell.js b/dist/components/m-table-cell.js
index c3290515..fac5ff91 100644
--- a/dist/components/m-table-cell.js
+++ b/dist/components/m-table-cell.js
@@ -199,7 +199,7 @@ var MTableCell = /*#__PURE__*/function (_React$Component) {
           errorState = _this$props.errorState,
           cellEditable = _this$props.cellEditable,
           onCellEditStarted = _this$props.onCellEditStarted,
-          cellProps = (0, _objectWithoutProperties2["default"])(_this$props, ["icons", "columnDef", "rowData", "errorState", "cellEditable", "onCellEditStarted"]);
+          cellProps = (0, _objectWithoutProperties2["default"])(_this$props, ["icons", "columnDef", "rowData", "errorState", "cellEditable", "onCellEditStarted", "scrollWidth"]);
       var cellAlignment = columnDef.align !== undefined ? columnDef.align : ["numeric", "currency"].indexOf(this.props.columnDef.type) !== -1 ? "right" : "left";
       var renderValue = this.getRenderValue();
 
diff --git a/dist/components/m-table-edit-field.js b/dist/components/m-table-edit-field.js
index 87a0a9d4..b39c3881 100644
--- a/dist/components/m-table-edit-field.js
+++ b/dist/components/m-table-edit-field.js
@@ -70,7 +70,7 @@ var MTableEditField = /*#__PURE__*/function (_React$Component) {
           onRowDataChange = _this$props.onRowDataChange,
           errorState = _this$props.errorState,
           onBulkEditRowChanged = _this$props.onBulkEditRowChanged,
-          props = (0, _objectWithoutProperties2["default"])(_this$props, ["columnDef", "rowData", "onRowDataChange", "errorState", "onBulkEditRowChanged"]);
+          props = (0, _objectWithoutProperties2["default"])(_this$props, ["columnDef", "rowData", "onRowDataChange", "errorState", "onBulkEditRowChanged", "scrollWidth"]);
       return props;
     }
   }, {
@@ -171,10 +171,10 @@ var MTableEditField = /*#__PURE__*/function (_React$Component) {
         InputProps: {
           style: {
             fontSize: 13
-          },
-          inputProps: {
-            "aria-label": "".concat(this.props.columnDef.title, ": press space to edit")
           }
+        },
+        inputProps: {
+          "aria-label": "".concat(this.props.columnDef.title, ": press space to edit")
         }
       })));
     }
@@ -192,10 +192,10 @@ var MTableEditField = /*#__PURE__*/function (_React$Component) {
         InputProps: {
           style: {
             fontSize: 13
-          },
-          inputProps: {
-            "aria-label": "".concat(this.props.columnDef.title, ": press space to edit")
           }
+        },
+        inputProps: {
+          "aria-label": "".concat(this.props.columnDef.title, ": press space to edit")
         }
       })));
     }
@@ -218,10 +218,10 @@ var MTableEditField = /*#__PURE__*/function (_React$Component) {
         InputProps: {
           style: {
             fontSize: 13
-          },
-          inputProps: {
-            "aria-label": this.props.columnDef.title
           }
+        },
+        inputProps: {
+          "aria-label": this.props.columnDef.title
         }
       }));
     }
@@ -246,13 +246,15 @@ var MTableEditField = /*#__PURE__*/function (_React$Component) {
 
           return _this4.props.onChange(value);
         },
-        inputProps: {
+        InputProps: {
           style: {
             fontSize: 13,
             textAlign: "right",
-            "aria-label": this.props.columnDef.title
           }
         },
+        inputProps: {
+          "aria-label": this.props.columnDef.title
+        },
         onKeyDown: this.props.onKeyDown,
         autoFocus: this.props.autoFocus
       }));
diff --git a/dist/components/m-table-edit-row.js b/dist/components/m-table-edit-row.js
index 6f4ba404..40c4abea 100644
--- a/dist/components/m-table-edit-row.js
+++ b/dist/components/m-table-edit-row.js
@@ -399,7 +399,7 @@ var MTableEditRow = /*#__PURE__*/function (_React$Component) {
           actions = _this$props.actions,
           errorState = _this$props.errorState,
           onBulkEditRowChanged = _this$props.onBulkEditRowChanged,
-          rowProps = (0, _objectWithoutProperties2["default"])(_this$props, ["detailPanel", "isTreeData", "onRowClick", "onRowSelected", "onTreeExpandChanged", "onToggleDetailPanel", "onEditingApproved", "onEditingCanceled", "getFieldValue", "components", "icons", "columns", "localization", "options", "actions", "errorState", "onBulkEditRowChanged"]);
+          rowProps = (0, _objectWithoutProperties2["default"])(_this$props, ["detailPanel", "isTreeData", "onRowClick", "onRowSelected", "onTreeExpandChanged", "onToggleDetailPanel", "onEditingApproved", "onEditingCanceled", "getFieldValue", "components", "icons", "columns", "localization", "options", "actions", "errorState", "onBulkEditRowChanged", "scrollWidth"]);
       return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(_TableRow["default"], (0, _extends2["default"])({
         onKeyDown: this.handleKeyDown
       }, rowProps, {
