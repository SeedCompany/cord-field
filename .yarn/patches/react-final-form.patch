diff --git a/typescript/index.d.ts b/typescript/index.d.ts
index 6709de686554cec49cef91ac17df98fcca0eb5cb..cb59ff3d3424a46eccee5333b9ab7c36676f3de4 100644
--- a/typescript/index.d.ts
+++ b/typescript/index.d.ts
@@ -27,8 +27,7 @@ export type FieldMetaState<FieldValue> = Pick<
   >
 >;

-interface FieldInputProps<FieldValue, T extends HTMLElement = HTMLElement>
-  extends AnyObject {
+interface FieldInputProps<FieldValue, T extends HTMLElement = HTMLElement> {
   name: string;
   onBlur: (event?: React.FocusEvent<T>) => void;
   onChange: (event: React.ChangeEvent<T> | any) => void;
@@ -50,7 +49,6 @@ export interface FieldRenderProps<
 > {
   input: FieldInputProps<InputValue, T>;
   meta: FieldMetaState<FieldValue>;
-  [otherProp: string]: any;
 }

 export interface FormRenderProps<
@@ -63,7 +61,7 @@ export interface FormRenderProps<
     event?: Partial<
       Pick<React.SyntheticEvent, "preventDefault" | "stopPropagation">
     >,
-  ) => Promise<AnyObject | undefined> | undefined;
+  ) => void;
 }

 export interface FormSpyRenderProps<
@@ -88,7 +86,6 @@ export interface FormProps<
   decorators?: Array<Decorator<FormValues, InitialFormValues>>;
   form?: FormApi<FormValues, InitialFormValues>;
   initialValuesEqual?: (a?: AnyObject, b?: AnyObject) => boolean;
-  [otherProp: string]: any;
 }

 export interface UseFieldConfig<FieldValue, InputValue = any> {
@@ -118,7 +115,6 @@ export interface FieldProps<
 > extends UseFieldConfig<FieldValue, InputValue>,
     RenderableProps<RP> {
   name: string;
-  [otherProp: string]: any;
 }

 export interface UseFormStateParams<
